---
# tasks file for caddy_docker

- name: Create Caddy directories
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner | default(omit) }}"
    group: "{{ item.group | default(omit) }}"
    mode: "{{ item.mode | default('0700') }}"
  with_items:
    - "{{ caddy_docker_config_directory }}"
    - "{{ caddy_docker_data_directory }}"

- name: Create Caddyfile
  ansible.builtin.copy:
    content: "{{ caddy_docker_caddyfile }}"
    dest: "{{ caddy_docker_caddyfile_file.path }}"
    owner: "{{ caddy_docker_caddyfile_file.owner | default(omit) }}"
    group: "{{ caddy_docker_caddyfile_file.group | default(omit) }}"
    mode: "{{ caddy_docker_caddyfile_file.mode | default('0600') }}"
  notify: Reload Caddy configuration

- name: Caddy with plugins
  when: caddy_docker_plugins
  block:
    - name: Create Caddy builder directory
      ansible.builtin.file:
        path: "{{ caddy_docker_builder_directory.path }}"
        state: directory
        owner: "{{ caddy_docker_builder_directory.owner | default(omit) }}"
        group: "{{ caddy_docker_builder_directory.group | default(omit) }}"
        mode: "{{ caddy_docker_builder_directory.mode | default('0755') }}"

    - name: Create Caddy dockerfile from template
      ansible.builtin.template:
        src: "{{ caddy_docker_builder_template }}"
        dest: "{{ caddy_docker_builder_directory.path }}/dockerfile"
        mode: 0655

    - name: Build Caddy container image
      community.docker.docker_image:
        name: "caddy-custom:plugins"
        build:
          path: "{{ caddy_docker_builder_directory.path }}"
          pull: true
        source: build
        state: present
        debug: true

    - name: Override caddy_docker_image
      ansible.builtin.set_fact:
        caddy_docker_image: caddy-custom:plugins

- name: Create Caddy Docker network(s)
  community.docker.docker_network:
    name: "{{ item.name }}"
    state: present
  with_items: "{{ caddy_docker_networks }}"
  when: caddy_docker_network_mode is not defined or caddy_docker_network_mode != "host"

- name: Set caddy_docker_volumes
  ansible.builtin.set_fact:
    caddy_docker_volumes:
      # Caddyfile
      - "{{ caddy_docker_caddyfile_file.path }}:/etc/caddy/Caddyfile"
      # Caddy data
      - "{{ caddy_docker_data_directory.path }}:/data"
      # Caddy config
      - "{{ caddy_docker_config_directory.path }}:/config"

- name: Add caddy_docker_extra_volumes
  ansible.builtin.set_fact:
    caddy_docker_volumes: "{{ caddy_docker_volumes + caddy_docker_extra_volumes }}"
  when: caddy_docker_extra_volumes

- name: Create Caddy Docker container
  community.docker.docker_container:
    name: caddy
    image: "{{ caddy_docker_image }}"
    command: "{{ caddy_docker_command }}"
    restart_policy: "{{ caddy_docker_restart_policy }}"
    network_mode: "{{ omit if caddy_docker_network_mode is not defined else caddy_docker_network_mode }}"
    networks: "{{ omit if caddy_docker_network_mode == 'host' else caddy_docker_networks }}"
    ports: "{{ omit if caddy_docker_network_mode == 'host' else caddy_docker_ports }}"
    exposed_ports: "{{ omit if caddy_docker_network_mode == 'host' else caddy_docker_exposed_ports }}"
    etc_hosts: "{{ caddy_docker_etc_hosts }}"
    volumes: "{{ caddy_docker_volumes }}"
    env: "{{ caddy_docker_environment_variables }}"
    state: present

- name: Start Caddy Docker container
  community.docker.docker_container:
    name: caddy
    state: started
